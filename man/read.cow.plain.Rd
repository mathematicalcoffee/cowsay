% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/cowsay.r
\name{read.cow.plain}
\alias{read.cow.plain}
\title{Read a plain-text cow}
\usage{
read.cow.plain(cowfile, eyes, thoughts, tongue)
}
\arguments{
\item{cowfile}{{string} path to the cowfile}

\item{eyes}{{string} characters to use for the eyes
(only the first two characters are used), e.g. "oo"}

\item{thoughts}{{string} used in drawing the speech bubble, e.g. "o" or "\\"}

\item{tongue}{{string} characters to use for the tongue
(at most the first two characters are used), e.g. "U", "\/"}
}
\value{
a character string with the cow (with embedded newlines), and
  eyes, thoughts, tongue substituted in.
}
\description{
Reads a cowfile where we take the cow as-is (comment lines allowed), do
 a straight substitution of eyes/tongue/thoughts tokens.
}
\details{
The cow file:

* can have comments. ANY line starting with `#` is a comment and is ignored.
  (if your cow has a line starting with `#`, indent the entire cow one space).
* can use the placeholders '$eyes', '$tongue', '$thoughts'; these are replaced
* every non-comment line is just the ASCII cow as-is (i.e. no `the_cow = `
    required).
}
\examples{
# this cow happens to be a simple one (no further code required)
cowfile <- system.file('cows', 'small.rcow', package='cowsay')
cat(cowsay:::read.cow.plain(cowfile, eyes="..", thoughts="o", tongue="U"))
}
\seealso{
Other cowfile parsing: \code{\link{get.cow}};
  \code{\link{is.perl.cow}}; \code{\link{read.cow.noperl}};
  \code{\link{read.cow.perl}}; \code{\link{read.cow.r}}
}

